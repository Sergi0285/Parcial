name: DeployBackend

on:
  push:
    branches: [ "Backend" ]
    
jobs:
  TestAndDeploy:
    name: Test and Deploy to EC2 Backend
    runs-on: ubuntu-latest
    
    steps:
      # Checkout the code from the Backend branch
      - name: Checkout code
        uses: actions/checkout@v2

      # Setup Python environment
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Install dependencies
      - name: Install dependencies
        run: |
          cd Backend &&
          pip install -r requirements.txt
          
      # Run unit tests
      - name: Run Unit Tests
        run: |
          cd Backend &&
          pytest Backend/tests/test_usuario.py --disable-warnings
          
      # Despliegue del Backend si las pruebas unitarias pasan
      - name: Deploy Backend to EC2 Instance
        if: success()  # Solo ejecutar si las pruebas pasan
        env:
          EC2_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SSH_HOST_BACK }}
          EC2_USER: ${{ secrets.USER_NAME }}
          APP_DIR: /home/ubuntu/Parcial
          APP_FILE: Servidor.py
        run: |
          echo "$EC2_PRIVATE_KEY" > ec2_key && chmod 600 ec2_key
          ssh -o StrictHostKeyChecking=no -i ec2_key ${EC2_USER}@${SERVER_IP} '
              cd /home/ubuntu/Parcial &&
              git fetch --all &&
              git switch Backend &&
              git reset --hard origin/Backend &&
              git pull origin Backend &&
              source /home/ubuntu/venv/bin/activate &&
              pip install -r requirements.txt &&
              sudo fuser -k 5000/tcp &&
              nohup python Servidor.py > /dev/null 2>&1 &
              echo "Servidor.py deber√≠a estar corriendo en segundo plano."
          '
