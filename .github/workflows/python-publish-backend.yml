name: DeployBackend

on:
  push:
    branches: [ "Backend" ]
    
jobs:
  Deploy:
  
    name: Deploy to EC2 Backend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          
      # Despliegue del Backend
      - name: Deploy Backend to EC2 Instance
        env:
          EC2_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SSH_HOST_BACK }}
          EC2_USER: ${{ secrets.USER_NAME }}
          APP_DIR: /home/ubuntu/Parcial
          APP_FILE: Servidor.py
        run: |
          echo "$EC2_PRIVATE_KEY" > ec2_key && chmod 600 ec2_key
          ssh -o StrictHostKeyChecking=no -i ec2_key ${EC2_USER}@${SERVER_IP} '
              # Acceder al directorio del backend
              cd /home/ubuntu/Parcial &&
              pwd &&

              # Actualizar el código desde la rama backend 
              ls -a &&
              git status &&
              git fetch --all &&
              git switch Backend &&
              git reset --hard origin/Backend &&
              git pull origin Backend &&
              git status &&

              # Activar el entorno virtual
              source /home/ubuntu/venv/bin/activate &&
              pwd &&
              cd /home/ubuntu/Parcial/Backend &&
              ls -a &&

              # Detener cualquier proceso que esté usando el puerto 5000
              sudo fuser -k 5000/tcp &&
              pwd &&

              # Ejecutar la aplicación Flask en segundo plano
              nohup python Servidor.py > /dev/null 2>&1 &

              # Verificar que el proceso está ejecutándose en segundo plano
              ls -a &&
              pwd &&
              ps aux | grep python &&
              echo "Servidor.py debería estar corriendo en segundo plano."
          '
